<beans xmlns="http://www.springframework.org/schema/beans"     
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"           
    xmlns:context="http://www.springframework.org/schema/context"   
    xmlns:aop="http://www.springframework.org/schema/aop"       
    xmlns:tx="http://www.springframework.org/schema/tx"         
    xmlns:util="http://www.springframework.org/schema/util"         
    xmlns:p="http://www.springframework.org/schema/p"               
    xsi:schemaLocation="http://www.springframework.org/schema/beans                             
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd        
                        http://www.springframework.org/schema/context                           
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd    
                        http://www.springframework.org/schema/aop                               
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/tx                            
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd                      
                        http://www.springframework.org/schema/util                          
                        http://www.springframework.org/schema/util/spring-util-3.0.xsd" >
    		<!-- 引入properties文件 -->
    		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    			<property name="location">
    				<value>classpath:datasource.properties</value>
    			</property>
    		</bean>
    		
    		<!-- 使用属性文件 配置dataSource -->
    		 <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
    			<property name="driverClassName" value="${driver}"/>
    			<property name="url" value="${url}"/>
    			<property name="username" value="${username}"/>
    			<property name="password" value="${password}"/>
    		</bean> 
    		<!-- 配置SqlSessionFactoryBean -->
    		<bean id="sqlSessionFactory"
    			 class="org.mybatis.spring.SqlSessionFactoryBean">
    			 <!-- 引用数据源组件  -->
    			 <property name="dataSource" ref="dataSource"/>
    			  <!-- 引用myBatista配置文件中的配置 -->
    			 <property name="configLocation" value="classpath:mybatis.xml"/>
    			 <!-- 配置sql映射中的文件 -->
    			 <property name="mapperLocations">
    			 	<list>
    			 		<value>classpath*:com/pmy/entity/*.xml</value>
    			 	</list>
    			 </property>
    		</bean>
    		
			<!--  配置SqlSessionTemplate -->
			 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
				<constructor-arg ref="sqlSessionFactory"/>
			</bean>
			
				<!-- 配置dao组件  -->
			<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
				<property name="basePackage" value="com.pmy.dao"/>
				<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
			</bean>
			 <!-- 配置扫描注解定义的业务Bean -->
			<context:component-scan base-package="com.pmy.service"/>
			
			
			<!-- 定义事物管理器 -->
			<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
					<property name="dataSource" ref="dataSource"/>
			</bean>
			
			<!-- 为指定的事物管理器设置事物属性 -->
			<tx:advice id="txAdvice" transaction-manager="txManager">
				<!-- 定义属性，声明事物规则 -->
				<tx:attributes>
					<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
					<tx:method name="login*" propagation="REQUIRED" read-only="true" />
					<tx:method name="change*" propagation="REQUIRED"/>
					<tx:method name="del*" propagation="REQUIRED"/>
					<tx:method name="add*" propagation="REQUIRED"/>
					<tx:method name="update*" propagation="REQUIRED"/>
					<tx:method name="*" propagation="REQUIRED"/>
				</tx:attributes>
			</tx:advice>
			
			 <!-- 定义切面 -->
			<aop:config>
				<aop:pointcut expression="execution(* com.pmy.service.*.*(..))" id="serviceMethod"/>
				<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
			</aop:config>
</beans>